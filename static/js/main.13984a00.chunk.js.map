{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","checkComments","checkUser","user","undefined","UserInfo","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postIdNum","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"0z8IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,W,MCCR,IAAMC,EAAc,SAAC,GAAD,OAd3B,SAAuBC,GACrB,OAAwB,IAApBA,EAASC,OAETD,EAASE,KAAI,SAAAT,GAAO,OAClB,qBAAKC,UAAU,cAAf,SACE,cAAC,EAAD,CAAaD,QAASA,GAAcA,EAAQU,SAM5C,mBAAG,UAAQ,oBAAX,6BAIRC,CADyB,EAAGJ,WCjB9B,SAASK,EAAUC,GACjB,YAAaC,IAATD,EACI,GAAN,OAAUA,GAGL,GAGF,IAAME,EAAW,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAH,OACtB,mBAAGZ,UAAU,WAAWE,KAAI,iBAAYS,EAAUC,EAAKT,QAAvD,SACGQ,EAAUC,EAAKX,SCNPc,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKhB,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCgB,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUL,KAAMI,EAAKJ,aAIzB,mBAAGZ,UAAU,iBAAb,SACGgB,EAAKZ,OAGR,uBAEA,cAAC,EAAD,CAAaE,SAAUU,EAAKV,gBCpBnBY,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKnB,UAAU,WAAf,SAEImB,EAAMX,KAAI,SAAAQ,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKP,UCYjC,IAAMU,EAAQC,EAAgBZ,KAAI,SAAAQ,GAAI,kCACxCA,GADwC,IAE3CJ,MAZmBS,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKH,KAAOY,MACzC,MAWPf,UARuBkB,EAQGR,EAAKP,GAPxBgB,EAAmBC,QAAO,SAAApB,GAAQ,OAAIA,EAASqB,SAAWH,MAC1D,QAFT,IAAyBA,EALJH,KAgBRO,EAAM,kBACjB,0BAAS5B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUmB,MAAOA,QCvBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13984a00.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nfunction checkComments(comments) {\n  if (comments.length !== 0) {\n    return (\n      comments.map(comment => (\n        <div className=\"CommentList\">\n          <CommentInfo comment={comment} key={comment.id} />\n        </div>\n      ))\n    );\n  }\n\n  return (<b data-cy=\"NoCommentsMessage\">No comments yet</b>);\n}\n\nexport const CommentList = ({ comments }) => (\n  checkComments(comments)\n);\n","function checkUser(user) {\n  if (user !== undefined) {\n    return `${user}`;\n  }\n\n  return '';\n}\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${checkUser(user.email)}`}>\n    {checkUser(user.name)}\n  </a>\n);\n","import { CommentList } from '../CommentList/CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {\n      posts.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))\n    }\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postIdNum) {\n  return commentsFromServer.filter(comments => comments.postId === postIdNum)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}